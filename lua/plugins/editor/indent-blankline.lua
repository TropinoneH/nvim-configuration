-- show indent lines
return {
    "lukas-reineke/indent-blankline.nvim",
    event = { "CursorHold", "CursorHoldI" },
    cmd = {
        "IBLEnable",
        "IBLDisable",
        "IBLToggle",
        "IBLEnableScope",
        "IBLDisableScope",
        "IBLToggleScope",
        "CursorHold",
        "CursorHoldI",
    },
    main = "ibl",
    opts = {
        indent = {
            char = "│",
            tab_char = "│",
            priority = 2,
            highlight = {
                "RainbowDelimiterRed",
                "RainbowDelimiterOrange",
                "RainbowDelimiterYellow",
                "RainbowDelimiterGreen",
                "RainbowDelimiterBlue",
                "RainbowDelimiterCyan",
                "RainbowDelimiterViolet",
            },
        },
        -- Note: The `scope` field requires treesitter to be set up
        scope = {
            char = "┃",
            show_start = false,
            show_end = false,
            priority = 1000,
            include = {
                node_type = {
                    ["*"] = {
                        "argument_list",
                        "arguments",
                        "assignment_statement",
                        "Block",
                        "class",
                        "ContainerDecl",
                        "dictionary",
                        "do_block",
                        "do_statement",
                        "element",
                        "except",
                        "FnCallArguments",
                        "for",
                        "for_statement",
                        "function",
                        "function_declaration",
                        "function_definition",
                        "if_statement",
                        "IfExpr",
                        "IfStatement",
                        "import",
                        "InitList",
                        "list_literal",
                        "method",
                        "object",
                        "ParamDeclList",
                        "repeat_statement",
                        "selector",
                        "SwitchExpr",
                        "table",
                        "table_constructor",
                        "try",
                        "tuple",
                        "type",
                        "var",
                        "while",
                        "while_statement",
                        "with",
                    },
                },
            },
        },
        exclude = {
            filetypes = {
                "", -- for all buffers without a file type
                "aerial",
                "alpha",
                "big_file_disabled_ft",
                "dashboard",
                "dotooagenda",
                "flutterToolsOutline",
                "fugitive",
                "git",
                "gitcommit",
                "help",
                "json",
                "log",
                "markdown",
                "NvimTree",
                "peekaboo",
                "startify",
                "TelescopePrompt",
                "todoist",
                "txt",
                "undotree",
                "vimwiki",
                "vista",
            },
        },
    },
    config = function(_, opts)
        require("ibl").setup(opts)
    end,
}
